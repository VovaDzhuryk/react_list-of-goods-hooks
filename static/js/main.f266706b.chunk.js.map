{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsWithID","map","good","i","name","id","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","goods","sort","goodA","goodB","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isButtonResetVisible","className","type","classNames","onClick","current","ReactDOM","render","document","getElementById"],"mappings":"6KA6BKA,E,0EALCC,EAlByB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQkCC,KAAI,SAACC,EAAMC,GAAP,MAAc,CACpDC,KAAMF,EACNG,GAAIF,O,SAGDJ,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAkCE,IAAMO,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASR,EAASW,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EA/BD,SACLC,EACAH,EACAH,GAEA,IAAMK,EAAY,YAAOC,GAoBzB,OAlBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQN,GACN,KAAKZ,EAASmB,QACZ,OAAOF,EAAMZ,KAAKe,cAAcF,EAAMb,MAExC,KAAKL,EAASqB,OACZ,OAAOJ,EAAMZ,KAAKiB,OAASJ,EAAMb,KAAKiB,OAExC,KAAKtB,EAASW,KACd,QACE,OAAO,MAITF,GACFK,EAAaS,UAGRT,EAMcU,CACnBvB,EACAW,EACAH,GAEIgB,EAAuBb,IAAaZ,EAASW,MAAQF,EAM3D,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBACpB,CAAE,WAAYhB,IAAaZ,EAASmB,UACtCU,QAAS,kBAAMhB,EAAYb,EAASmB,UAJtC,iCASA,wBACEQ,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,WAAYhB,IAAaZ,EAASqB,SACtCQ,QAAS,kBAAMhB,EAAYb,EAASqB,SAJtC,4BASA,wBACEM,KAAK,SACLD,UAAWE,IAAW,oBACpB,CAAE,YAAanB,IACjBoB,QAAS,kBAAMnB,GAAc,SAAAoB,GAAO,OAAKA,MAJ3C,qBASCL,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAvCe,WACvBnB,GAAc,GACdG,EAAYb,EAASW,OAkCf,sBAUJ,6BACE,6BACGG,EAAaZ,KAAI,gBAAGG,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OAChB,oBAAI,UAAQ,OAAZ,SACGD,GADqBC,cCtHpCyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f266706b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface Good {\n  name: string,\n  id: number,\n}\n\nconst goodsWithID = goodsFromServer.map((good, i) => ({\n  name: good,\n  id: i,\n}));\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: Good[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodA, goodB) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return goodA.name.localeCompare(goodB.name);\n\n      case SortType.LENGTH:\n        return goodA.name.length - goodB.name.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const visibleGoods = getReorderedGoods(\n    goodsWithID,\n    sortType,\n    isReversed,\n  );\n  const isButtonResetVisible = sortType !== SortType.NONE || isReversed;\n  const setDefaultValues = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info',\n            { 'is-light': sortType !== SortType.ALPABET })}\n          onClick={() => setSortType(SortType.ALPABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning',\n            { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(current => !current)}\n        >\n          Reverse\n        </button>\n\n        {isButtonResetVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={setDefaultValues}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(({ name, id }) => (\n            <li data-cy=\"Good\" key={id}>\n              {name}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}